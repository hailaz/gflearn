"use strict";(self.webpackChunkhailaz_github_io=self.webpackChunkhailaz_github_io||[]).push([[672],{6311:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=e(7462),g=(e(7294),e(3905)),r=e(4915);const i={},a="\u65e5\u5fd7",s={unversionedId:"os/log/readme",id:"os/log/readme",title:"\u65e5\u5fd7",description:"\u81ea\u5b9a\u4e49json\u683c\u5f0f\u8f93\u51fa",source:"@site/docs/os/0-log/readme.md",sourceDirName:"os/0-log",slug:"/os/log/",permalink:"/gflearn/docs/os/log/",draft:!1,editUrl:"https://github.com/hailaz/gflearn/blob/main/docs/os/0-log/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u7cfb\u7edf\u76f8\u5173",permalink:"/gflearn/docs/os/"},next:{title:"web \u670d\u52a1\u76f8\u5173",permalink:"/gflearn/docs/web/"}},l={},c=[{value:"\u81ea\u5b9a\u4e49json\u683c\u5f0f\u8f93\u51fa",id:"\u81ea\u5b9a\u4e49json\u683c\u5f0f\u8f93\u51fa",level:2},{value:"\u4fee\u6539glog\u9ed8\u8ba4\u65e5\u5fd7\u4e3a\u914d\u7f6e\u6587\u4ef6\u65e5\u5fd7",id:"\u4fee\u6539glog\u9ed8\u8ba4\u65e5\u5fd7\u4e3a\u914d\u7f6e\u6587\u4ef6\u65e5\u5fd7",level:2}],u={toc:c};function d(n){let{components:t,...e}=n;return(0,g.kt)("wrapper",(0,o.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,g.kt)("h1",{id:"\u65e5\u5fd7"},"\u65e5\u5fd7"),(0,g.kt)("h2",{id:"\u81ea\u5b9a\u4e49json\u683c\u5f0f\u8f93\u51fa"},"\u81ea\u5b9a\u4e49json\u683c\u5f0f\u8f93\u51fa"),(0,g.kt)(r.Z,{language:"go",mdxType:"CodeBlock"},'package main\n\nimport (\n\t"context"\n\t"encoding/json"\n\t"fmt"\n\n\t"github.com/gogf/gf/v2/frame/g"\n\t"github.com/gogf/gf/v2/os/gctx"\n\t"github.com/gogf/gf/v2/os/glog"\n)\n\n// JsonOutputsForLogger is for JSON marshaling in sequence.\ntype JsonOutputsForLogger struct {\n\tTraceId string `json:"trace_id"`\n\tTime    string `json:"time"`\n\tLevel   string `json:"level"`\n\tContent string `json:"content"`\n}\n\n// LoggingJsonHandler is a example handler for logging JSON format content.\nvar LoggingJsonHandler glog.Handler = func(ctx context.Context, in *glog.HandlerInput) {\n\tjsonStruc := JsonOutputsForLogger{\n\t\tTraceId: in.TraceId,\n\t\tTime:    in.Time.Format("2006-01-02 15:04:05.000"),\n\t\tLevel:   fmt.Sprintf("%d", in.Level),\n\t\tContent: in.Content,\n\t}\n\tb, err := json.Marshal(jsonStruc)\n\tif err != nil {\n\t\tin.Next(ctx)\n\t}\n\tin.Buffer.Write(b)\n\tin.Buffer.WriteString("\\n")\n\tin.Next(ctx)\n}\n\nfunc main() {\n\tg.Log().SetHandlers(LoggingJsonHandler)\n\tctx := gctx.New()\n\tg.Log().Debug(ctx, "Debugging...")\n\tg.Log().Warning(ctx, "It is warning info")\n\tg.Log().Error(ctx, "Error occurs, please have a check")\n}\n'),(0,g.kt)("h2",{id:"\u4fee\u6539glog\u9ed8\u8ba4\u65e5\u5fd7\u4e3a\u914d\u7f6e\u6587\u4ef6\u65e5\u5fd7"},"\u4fee\u6539glog\u9ed8\u8ba4\u65e5\u5fd7\u4e3a\u914d\u7f6e\u6587\u4ef6\u65e5\u5fd7"),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-go"},"// \u521d\u59cb\u5316\u65e5\u5fd7\nglog.SetDefaultLogger(g.Log())\nglog.SetFlags(glog.GetFlags() | glog.F_FILE_SHORT)\n")))}d.isMDXComponent=!0}}]);